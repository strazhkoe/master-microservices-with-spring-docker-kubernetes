docker build . easybytes/account             - build docker image from dockerfile
docker run -d -p 8080:8080 easybytes/account - run a new instance of container from image
docker ps                                    - list running containers
docker ps -a                                 - list all containers
docker stop <hash>                           - correctly stop the container
docker kill <hash>                           - immediately stop the container
docker start <hash>                          - start previously stopped container
docker rm <hash>                             - remove the container
docker logs <hash>                           - connect to container and see its logs
docker images                                - list all images pulled
docker image tag <from> <to>                 - copy image with a new tag
docker image rm <image>                      - remove image
-------
docker-compose up -d                         - run containers described in docker-coompose.yml
docker-compose stop                          - stop previously run containers
-------

mvn spring-boot:build-image

Zipkin
docker run -d -p 9411:9411 openzipkin/zipkin

k8s
kubectl get nodes                            - getting a list of worker nodes
kubectl get pods                             - getting a list of pods
kubectl get deployment                       - getting a list of deployments
kubectl get services                         - getiing a list of available services
kubectl get replicaset                       - getting a list of replicasets
kubectl get configmap                        - getting available config maps
kubectl apply -f 1_configmaps.yml            - apply file. In this case - upload config map
kubectl delete configmap <name>              - delete configmap by name
kubectl get pods                             - getting a list of available pods

kubectl scale deployment 
<deployment-name> --replicas=3                                                    - changing number of replicas on the fly
kubectl describe pod <pod name>                                                   - getting info about pod
kubectl set image deployment accounts-deployment accounts=strazhkoe/accounts:k8s  - change docker image for container in deployment
kubectl rollout history deployment <deployment name>                              - getting revisions information
kubectl rollout undo deployment <deployment name> --to-revision=<revision number> - roll back to revision
kubectl logs <pod name>                                                           - see logs of the pod

kubectl get hpa                              - get horizontal pod auto scalings

kubectl autoscale deployment accounts-deployment --min=3 --max=10 --cpu-percent=70

